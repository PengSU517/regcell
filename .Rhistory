p1 = ggplot(data = result3)+
geom_boxplot(aes(fill = method, x = gamma, y = TPD))+
facet_grid(outtype~e, scales = "free", space = "free_x") +
#scale_y_continuous(limits = c(0,10))+
theme_bw()+
labs(x = expression(gamma*": magnitude of outlyingness"))+
theme(text= element_text(size=12),
#axis.text.x = element_blank(),
legend.position = "right")
p1
result3[which.max(result3$MAPE),]
levels(result3$method)
#ggsave("plots_time_p200.eps", plot = p1, width = 10,height = 7)
result3 = result2 %>% filter(df == "t(3)")
result3 = result3[complete.cases(result3$TPD),]
p1 = ggplot(data = result3)+
geom_boxplot(aes(fill = method, x = gamma, y = TPD))+
facet_grid(outtype~e, scales = "free", space = "free_x") +
#scale_y_continuous(limits = c(0,10))+
theme_bw()+
labs(x = expression(gamma*": magnitude of outlyingness"))+
theme(text= element_text(size=12),
#axis.text.x = element_blank(),
legend.position = "right")
p1
result3[which.max(result3$MAPE),]
levels(result3$method)
#ggsave("plots_time_p200.eps", plot = p1, width = 10,height = 7)
result3 = result2 %>% filter(df == "t(3)")
result3 = result3[complete.cases(result3$TPD),]
p1 = ggplot(data = result3)+
geom_boxplot(aes(fill = method, x = gamma, y = TND))+
facet_grid(outtype~e, scales = "free", space = "free_x") +
#scale_y_continuous(limits = c(0,10))+
theme_bw()+
labs(x = expression(gamma*": magnitude of outlyingness"))+
theme(text= element_text(size=12),
#axis.text.x = element_blank(),
legend.position = "right")
p1
result3[which.max(result3$MAPE),]
levels(result3$method)
#ggsave("plots_time_p200.eps", plot = p1, width = 10,height = 7)
result3 = result2 %>% filter(df == "t(3)")
result3 = result3[complete.cases(result3$TPD),]
p1 = ggplot(data = result3)+
geom_boxplot(aes(fill = method, x = gamma, y = TPD))+
facet_grid(outtype~e, scales = "free", space = "free_x") +
#scale_y_continuous(limits = c(0,10))+
theme_bw()+
labs(x = expression(gamma*": magnitude of outlyingness"))+
theme(text= element_text(size=12),
#axis.text.x = element_blank(),
legend.position = "right")
p1
result3[which.max(result3$MAPE),]
levels(result3$method)
#ggsave("plots_time_p200.eps", plot = p1, width = 10,height = 7)
result3 = result2 %>% filter(df == "t(3)")
result3 = result3[complete.cases(result3$TPD),]
p1 = ggplot(data = result3)+
geom_boxplot(aes(fill = method, x = gamma, y = MAPE))+
facet_grid(outtype~e, scales = "free", space = "free_x") +
#scale_y_continuous(limits = c(0,10))+
theme_bw()+
labs(x = expression(gamma*": magnitude of outlyingness"))+
theme(text= element_text(size=12),
#axis.text.x = element_blank(),
legend.position = "right")
p1
result3[which.max(result3$MAPE),]
levels(result3$method)
#ggsave("plots_time_p200.eps", plot = p1, width = 10,height = 7)
result3 = result2 %>% filter(df == "Normal")
result3 = result3[complete.cases(result3$TPD),]
p1 = ggplot(data = result3)+
geom_boxplot(aes(fill = method, x = gamma, y = MAPE))+
facet_grid(outtype~e, scales = "free", space = "free_x") +
#scale_y_continuous(limits = c(0,10))+
theme_bw()+
labs(x = expression(gamma*": magnitude of outlyingness"))+
theme(text= element_text(size=12),
#axis.text.x = element_blank(),
legend.position = "right")
p1
result3[which.max(result3$MAPE),]
levels(result3$method)
#ggsave("plots_time_p200.eps", plot = p1, width = 10,height = 7)
result3 = result2 %>% filter(df == "Normal")
result3 = result3[complete.cases(result3$TPD),]
p1 = ggplot(data = result3)+
geom_boxplot(aes(fill = method, x = gamma, y = MAPE))+
facet_grid(outtype~e, scales = "free", space = "free_x") +
#scale_y_continuous(limits = c(0,10))+
theme_bw()+
labs(x = expression(gamma*": magnitude of outlyingness"))+
theme(text= element_text(size=12),
#axis.text.x = element_blank(),
legend.position = "right")
p1
result3[which.max(result3$MAPE),]
levels(result3$method)
#ggsave("plots_time_p200.eps", plot = p1, width = 10,height = 7)
result2 = result1
result2[(result2$e=="e = 0%")&(result2$gamma!="2"),]=NA
result2 = result2[complete.cases(result2$m),]
result2$gamma[result2$e=="e = 0%"] = " "
levels(result2$method) = c("RobReg_DDCimp", "RobReg_Rlars_Cell_Restoration","RobReg_Rlars_Row_Restoration",
"RobSel_DDCimp", "RobSel_Rlars_Cell_Restoration","RobSel_Rlars_Row_Restoration")
result3 = result2 %>% filter(df == "Normal")
p1 = ggplot(data = result3)+
geom_boxplot(aes(fill = method, x = gamma, y = MAPE))+
facet_grid(outtype~e, scales = "free", space = "free_x") +
#scale_y_continuous(limits = c(0,10))+
theme_bw()+
labs(x = expression(gamma*": magnitude of outlyingness"))+
theme(text= element_text(size=12),
#axis.text.x = element_blank(),
legend.position = "right")
p1
result3[which.max(result3$MAPE),]
levels(result3$method)
#ggsave("plots_time_p200.eps", plot = p1, width = 10,height = 7)
result3 = result2 %>% filter(method == "RobReg_DDCimp")
View(result3)
{
m = 1
n = 100
p = 10
pr = 5
e = 0
r = 0.5
gamma = 2
df = 3
outtype = "rowwise"
}
##### methods
{
smrlarsrowf    = function(y, x){srlmcell::srlmm(y,x, tech = "row",   initial = "rlars")}
smrlarscellf   = function(y, x){srlmcell::srlmm(y,x, tech = "cell",  initial = "rlars")}
sddcf   = function(y, x){srlmcell::srlmm(y,x, iter = F,  tech = "cell",  initial = "rlars")}
mrlarsrowf    = function(y, x){srlmcell::rlmm(y,x, tech = "row",   initial = "rlars")}
mrlarscellf   = function(y, x){srlmcell::rlmm(y,x, tech = "cell",  initial = "rlars")}
ddcf   = function(y, x){srlmcell::rlmm(y,x, iter = F,  tech = "cell",  initial = "rlars")}
mtds = list(
smrlarsrow   = smrlarsrowf,
smrlarscell  = smrlarscellf,
sddc         = sddcf,
mrlarsrow    = mrlarsrowf,
mrlarscell   = mrlarscellf,
ddc          = ddcf
)
}
mtd = ddc
mtd = "ddc"
{
seed = m
set.seed(seed = seed)
beta = c(rep(1,pr),rep(0,p-pr))
dataset = srlmcell::genevar(n = n, p = p, e = e, r = r, beta = beta, gamma = gamma, df = df, outtype = outtype)
x  = dataset$x
xc = dataset$xc
y  = dataset$y
ynew = dataset$ynew
outlierlabel = dataset$outlierlabel
}
outlierlabel
{
m = 1
n = 100
p = 10
pr = 5
e = 0
r = 0.5
gamma = 2
df = 3
outtype = "rowwise"
mtd = "ddc"
}
{
m = 1
n = 100
p = 10
pr = 5
e = 0.1
r = 0.5
gamma = 2
df = 3
outtype = "rowwise"
mtd = "ddc"
}
{
seed = m
set.seed(seed = seed)
beta = c(rep(1,pr),rep(0,p-pr))
dataset = srlmcell::genevar(n = n, p = p, e = e, r = r, beta = beta, gamma = gamma, df = df, outtype = outtype)
x  = dataset$x
xc = dataset$xc
y  = dataset$y
ynew = dataset$ynew
outlierlabel = dataset$outlierlabel
}
outlierlabel
{
m = 1
n = 100
p = 10
pr = 5
e = 0.1
r = 0.5
gamma = 2
df = 3
outtype = "cellwise"
mtd = "ddc"
}
{
seed = m
set.seed(seed = seed)
beta = c(rep(1,pr),rep(0,p-pr))
dataset = srlmcell::genevar(n = n, p = p, e = e, r = r, beta = beta, gamma = gamma, df = df, outtype = outtype)
x  = dataset$x
xc = dataset$xc
y  = dataset$y
ynew = dataset$ynew
outlierlabel = dataset$outlierlabel
}
outlierlabel
timing  = system.time({fit = mtds[[mtd]](y,x)})["elapsed"]
betahat = fit$betahat
betahat
beta
fit$flagger
{
m = 1
n = 100
p = 10
pr = 5
e = 0.1
r = 0.5
gamma = 2
df = 3
outtype = "cellwise"
mtd = "ddc"
}
##### methods
{
smrlarsrowf    = function(y, x){srlmcell::srlmm(y,x, tech = "row",   initial = "rlars")}
smrlarscellf   = function(y, x){srlmcell::srlmm(y,x, tech = "cell",  initial = "rlars")}
sddcf   = function(y, x){srlmcell::srlmm(y,x, iter = F,  tech = "cell",  initial = "rlars")}
mrlarsrowf    = function(y, x){srlmcell::rlmm(y,x, tech = "row",   initial = "rlars")}
mrlarscellf   = function(y, x){srlmcell::rlmm(y,x, tech = "cell",  initial = "rlars")}
ddcf   = function(y, x){srlmcell::rlmm(y,x, iter = F,  tech = "cell",  initial = "rlars")}
mtds = list(
smrlarsrow   = smrlarsrowf,
smrlarscell  = smrlarscellf,
sddc         = sddcf,
mrlarsrow    = mrlarsrowf,
mrlarscell   = mrlarscellf,
ddc          = ddcf
)
}
{
seed = m
set.seed(seed = seed)
beta = c(rep(1,pr),rep(0,p-pr))
dataset = srlmcell::genevar(n = n, p = p, e = e, r = r, beta = beta, gamma = gamma, df = df, outtype = outtype)
x  = dataset$x
xc = dataset$xc
y  = dataset$y
ynew = dataset$ynew
outlierlabel = dataset$outlierlabel
}
timing  = system.time({fit = mtds[[mtd]](y,x)})["elapsed"]
betahat = fit$betahat
tpf<-function(betahat, beta){sum((as.logical(betahat)==as.logical(beta))[1:pr])}
tnf<-function(betahat,beta){sum((as.logical(betahat)==as.logical(beta))[-(1:pr)])}
tp = tpf(betahat[-1], beta)
tn = tnf(betahat[-1], beta)
TPD = sum(fit$flagger[which(outlierlabel==1)] == outlierlabel[which(outlierlabel==1)])/sum(outlierlabel==1)
TND = sum(fit$flagger[which(outlierlabel==0)] == outlierlabel[which(outlierlabel==0)])/sum(outlierlabel==0)
mtd
TPD
sum(fit$flagger[which(outlierlabel==1)] == outlierlabel[which(outlierlabel==1)])
fit$flagger
library(srlmcell)
{
m = 1
n = 100
p = 10
pr = 5
e = 0.1
r = 0.5
gamma = 2
df = 3
outtype = "cellwise"
mtd = "ddc"
}
##### methods
{
smrlarsrowf    = function(y, x){srlmcell::srlmm(y,x, tech = "row",   initial = "rlars")}
smrlarscellf   = function(y, x){srlmcell::srlmm(y,x, tech = "cell",  initial = "rlars")}
sddcf   = function(y, x){srlmcell::srlmm(y,x, iter = F,  tech = "cell",  initial = "rlars")}
mrlarsrowf    = function(y, x){srlmcell::rlmm(y,x, tech = "row",   initial = "rlars")}
mrlarscellf   = function(y, x){srlmcell::rlmm(y,x, tech = "cell",  initial = "rlars")}
ddcf   = function(y, x){srlmcell::rlmm(y,x, iter = F,  tech = "cell",  initial = "rlars")}
mtds = list(
smrlarsrow   = smrlarsrowf,
smrlarscell  = smrlarscellf,
sddc         = sddcf,
mrlarsrow    = mrlarsrowf,
mrlarscell   = mrlarscellf,
ddc          = ddcf
)
}
{
seed = m
set.seed(seed = seed)
beta = c(rep(1,pr),rep(0,p-pr))
dataset = srlmcell::genevar(n = n, p = p, e = e, r = r, beta = beta, gamma = gamma, df = df, outtype = outtype)
x  = dataset$x
xc = dataset$xc
y  = dataset$y
ynew = dataset$ynew
outlierlabel = dataset$outlierlabel
}
timing  = system.time({fit = mtds[[mtd]](y,x)})["elapsed"]
betahat = fit$betahat
tpf<-function(betahat, beta){sum((as.logical(betahat)==as.logical(beta))[1:pr])}
tnf<-function(betahat,beta){sum((as.logical(betahat)==as.logical(beta))[-(1:pr)])}
tp = tpf(betahat[-1], beta)
tn = tnf(betahat[-1], beta)
TPD = sum(fit$flagger[which(outlierlabel==1)] == outlierlabel[which(outlierlabel==1)])/sum(outlierlabel==1)
TND = sum(fit$flagger[which(outlierlabel==0)] == outlierlabel[which(outlierlabel==0)])/sum(outlierlabel==0)
mape = mean(abs(ynew - cbind(1,xc)%*%betahat))
rtmspe = sqrt(mean(((ynew - cbind(1,xc)%*%betahat)^2)[1:(0.8*n)]))
TND
TPD
mtd
{
m = 1
n = 100
p = 10
pr = 5
e = 0.1
r = 0.5
gamma = 2
df = 0
outtype = "cellwise"
mtd = "ddc"
}
##### methods
{
smrlarsrowf    = function(y, x){srlmcell::srlmm(y,x, tech = "row",   initial = "rlars")}
smrlarscellf   = function(y, x){srlmcell::srlmm(y,x, tech = "cell",  initial = "rlars")}
sddcf   = function(y, x){srlmcell::srlmm(y,x, iter = F,  tech = "cell",  initial = "rlars")}
mrlarsrowf    = function(y, x){srlmcell::rlmm(y,x, tech = "row",   initial = "rlars")}
mrlarscellf   = function(y, x){srlmcell::rlmm(y,x, tech = "cell",  initial = "rlars")}
ddcf   = function(y, x){srlmcell::rlmm(y,x, iter = F,  tech = "cell",  initial = "rlars")}
mtds = list(
smrlarsrow   = smrlarsrowf,
smrlarscell  = smrlarscellf,
sddc         = sddcf,
mrlarsrow    = mrlarsrowf,
mrlarscell   = mrlarscellf,
ddc          = ddcf
)
}
{
seed = m
set.seed(seed = seed)
beta = c(rep(1,pr),rep(0,p-pr))
dataset = srlmcell::genevar(n = n, p = p, e = e, r = r, beta = beta, gamma = gamma, df = df, outtype = outtype)
x  = dataset$x
xc = dataset$xc
y  = dataset$y
ynew = dataset$ynew
outlierlabel = dataset$outlierlabel
}
timing  = system.time({fit = mtds[[mtd]](y,x)})["elapsed"]
betahat = fit$betahat
tpf<-function(betahat, beta){sum((as.logical(betahat)==as.logical(beta))[1:pr])}
tnf<-function(betahat,beta){sum((as.logical(betahat)==as.logical(beta))[-(1:pr)])}
tp = tpf(betahat[-1], beta)
tn = tnf(betahat[-1], beta)
TPD = sum(fit$flagger[which(outlierlabel==1)] == outlierlabel[which(outlierlabel==1)])/sum(outlierlabel==1)
TND = sum(fit$flagger[which(outlierlabel==0)] == outlierlabel[which(outlierlabel==0)])/sum(outlierlabel==0)
TPD
{
m = 1
n = 100
p = 10
pr = 5
e = 0.05
r = 0.5
gamma = 2
df = 0
outtype = "cellwise"
mtd = "ddc"
}
{
seed = m
set.seed(seed = seed)
beta = c(rep(1,pr),rep(0,p-pr))
dataset = srlmcell::genevar(n = n, p = p, e = e, r = r, beta = beta, gamma = gamma, df = df, outtype = outtype)
x  = dataset$x
xc = dataset$xc
y  = dataset$y
ynew = dataset$ynew
outlierlabel = dataset$outlierlabel
}
timing  = system.time({fit = mtds[[mtd]](y,x)})["elapsed"]
betahat = fit$betahat
tpf<-function(betahat, beta){sum((as.logical(betahat)==as.logical(beta))[1:pr])}
tnf<-function(betahat,beta){sum((as.logical(betahat)==as.logical(beta))[-(1:pr)])}
tp = tpf(betahat[-1], beta)
tn = tnf(betahat[-1], beta)
TPD = sum(fit$flagger[which(outlierlabel==1)] == outlierlabel[which(outlierlabel==1)])/sum(outlierlabel==1)
TND = sum(fit$flagger[which(outlierlabel==0)] == outlierlabel[which(outlierlabel==0)])/sum(outlierlabel==0)
TPD
library(tidyverse)
load("result_regression_new.RData")
result1 = as.data.frame(t(as.data.frame(result)))
result1 = result1 %>% mutate(across(c(1:4, 12:18), as.numeric),
across(5:11, as.factor))
unique(result1$method)
levels(result1$e) = c("e = 0%", "e = 2%", "e = 5%", "e = 10%")
levels(result1$df) = c( "Normal","t(3)", "t(5)")
levels(result1$gamma) = c( "2", "4", "6", "8", "10", " ")
result1$df = factor(result1$df, levels = c("t(3)", "t(5)", "Normal"))
#result1[which.max(result1$MAPE),]
levels(result1$method)
result2 = result1
result2[(result2$e=="e = 0%")&(result2$gamma!="2"),]=NA
result2 = result2[complete.cases(result2$m),]
result2$gamma[result2$e=="e = 0%"] = " "
levels(result2$method) = c("RobReg_DDCimp", "RobReg_Rlars_Cell_Restoration","RobReg_Rlars_Row_Restoration",
"RobSel_DDCimp", "RobSel_Rlars_Cell_Restoration","RobSel_Rlars_Row_Restoration")
result3 = result2 %>% filter(df == "Normal")
#result3 = result2 %>% filter(method == "RobReg_DDCimp")
p1 = ggplot(data = result3)+
geom_boxplot(aes(fill = method, x = gamma, y = MAPE))+
facet_grid(outtype~e, scales = "free", space = "free_x") +
#scale_y_continuous(limits = c(0,10))+
theme_bw()+
labs(x = expression(gamma*": magnitude of outlyingness"))+
theme(text= element_text(size=12),
#axis.text.x = element_blank(),
legend.position = "right")
p1
result3[which.max(result3$MAPE),]
levels(result3$method)
#ggsave("plots_time_p200.eps", plot = p1, width = 10,height = 7)
result3 = result2 %>% filter(df == "Normal")
#result3 = result2 %>% filter(method == "RobReg_DDCimp")
p1 = ggplot(data = result3)+
geom_boxplot(aes(fill = method, x = gamma, y = TPD))+
facet_grid(outtype~e, scales = "free", space = "free_x") +
#scale_y_continuous(limits = c(0,10))+
theme_bw()+
labs(x = expression(gamma*": magnitude of outlyingness"))+
theme(text= element_text(size=12),
#axis.text.x = element_blank(),
legend.position = "right")
p1
result3 = result2 %>% filter(df == "Normal")
#result3 = result2 %>% filter(method == "RobReg_DDCimp")
p1 = ggplot(data = result3)+
geom_boxplot(aes(fill = method, x = gamma, y = TND))+
facet_grid(outtype~e, scales = "free", space = "free_x") +
#scale_y_continuous(limits = c(0,10))+
theme_bw()+
labs(x = expression(gamma*": magnitude of outlyingness"))+
theme(text= element_text(size=12),
#axis.text.x = element_blank(),
legend.position = "right")
p1
result3[which.max(result3$MAPE),]
levels(result3$method)
#ggsave("plots_time_p200.eps", plot = p1, width = 10,height = 7)
#result3 = result2 %>% filter(method == "RobReg_DDCimp")
max(result3$m)
head(result3$TPD)
result3 = result2 %>% filter(df == "Normal")
#result3 = result2 %>% filter(method == "RobReg_DDCimp")
result3 = result3[complete.cases(result3$TPD),]
p1 = ggplot(data = result3)+
geom_boxplot(aes(fill = method, x = gamma, y = TND))+
facet_grid(outtype~e, scales = "free", space = "free_x") +
#scale_y_continuous(limits = c(0,10))+
theme_bw()+
labs(x = expression(gamma*": magnitude of outlyingness"))+
theme(text= element_text(size=12),
#axis.text.x = element_blank(),
legend.position = "right")
p1
result3[which.max(result3$MAPE),]
levels(result3$method)
head(result3$TPD)
#ggsave("plots_time_p200.eps", plot = p1, width = 10,height = 7)
shiny::runApp('~/R/srlmcell_newshiny')
runApp('~/R/srlmcell_newshiny')
runApp('~/R/srlmcell_newshiny')
result2 = result1
result2[(result2$e=="e = 0%")&(result2$gamma!="2"),]=NA
result2 = result2[complete.cases(result2$m),]
result2$gamma[result2$e=="e = 0%"] = " "
levels(result2$method) = c("RobReg_DDCimp", "RobReg_Rlars_Cell_Restoration","RobReg_Rlars_Row_Restoration",
"RobSel_DDCimp", "RobSel_Rlars_Cell_Restoration","RobSel_Rlars_Row_Restoration")
result_regression_new= result2
save(result_regression_new, file = "result_simu_regression_new_cleaned.RData")
load("result_simu_regression_new_cleaned.RData")
#result_high$method %in% c("sss",   "rlars", "smddcrow", "smddccell", "smrlarsrow", "smrlarscell")
