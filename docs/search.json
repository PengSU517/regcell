[{"path":"https://pengsu517.github.io/regcell/articles/demo.html","id":"a-simulated-dataset","dir":"Articles","previous_headings":"","what":"A simulated dataset","title":"demo","text":"","code":"set.seed(2023) dat = regcell::genevar(n = 200, p = 100, e = 0.05, sigma = 3)  y = dat$y x = dat$x"},{"path":"https://pengsu517.github.io/regcell/articles/demo.html","id":"outlier-detection","dir":"Articles","previous_headings":"A simulated dataset","what":"Outlier detection","title":"demo","text":"","code":"fit1 <- cellWise::DDC(x) #>   #>  The input data has 200 rows and 100 columns. p1 = cellWise::cellMap(fit1$stdResid, columnlabels = c(1,rep(\" \",dim(x)[2]-2),dim(x)[2]), rowlabels = c(1,rep(\" \",dim(x)[1]-2),dim(x)[1]), columnangle = 0,         rowtitle = \"Observations\", columntitle = \"Variables\", sizetitles = 2,adjustrowlabels = 0.5, adjustcolumnlabels = 0.5)+    theme(axis.text.x = element_text(size = 12),         axis.text.y = element_text(size = 12),         axis.title.x = element_text(size = 14),         axis.title.y = element_text(size = 14),         legend.title = element_text(size=14), #change legend title font size         legend.text = element_text(size=12))  p1"},{"path":"https://pengsu517.github.io/regcell/articles/demo.html","id":"model-training","dir":"Articles","previous_headings":"A simulated dataset","what":"Model training","title":"demo","text":"","code":"set.seed(1234) inTrain <- caret::createDataPartition(y, p = 0.7)[[1]]   ytrain = y[inTrain] xtrain = x[inTrain,]  ytest = y[-inTrain] xtest = x[-inTrain,] set.seed(1234) #fit a model using CR-Lasso fit0 = sregcell_std(ytrain,xtrain, penal = 1, softbeta = T, prob = 0.995, softzeta = 1, maxiter = 30) res = ytest - fit0$intercept_hat - xtest%*%fit0$betahat  #fit a model using RLars fit1 = Rlars(ytrain,xtrain) res2 = ytest - fit1$betahat[1] - xtest%*%fit1$betahat[-1] df = data.frame(res = c(res, res2),                  method = c(rep(\"CR-Lasso\", length(res)),rep(\"RLars\", length(res)) )) boxplot(res~method, outline = FALSE, data = df)"},{"path":[]},{"path":"https://pengsu517.github.io/regcell/articles/demo.html","id":"methods-compared","dir":"Articles","previous_headings":"The Bodyfat dataset","what":"methods compared","title":"demo","text":"","code":"mtds = list(   # sss = function(y, x){shootings::sparseshooting(x,y)$coef},   rlars = function(y, x){regcell::Rlars(y, x)$betahat},   # mmlasso = function(y,x){mmlasso::mmlasso(x,y)$coef.MMLasso.ad},   slts = function(y,x){robustHD::sparseLTS(x,y)$coefficients},    cell_lasso_post = function(y,x){     fit = regcell::sregcell_std(y = y, x = x, softbeta = TRUE,                                 lambda_zeta = 1, penal = 1, penaldelta = 0, prob = 0.99995)##这里好奇怪啊     return(c(fit$intercept_hat_post, fit$betahat_post))   },    lasso  = function(y,x){     return(regcell::lassocv(y,x)$betahat)   }  ) library(mfp) #> Warning: package 'mfp' was built under R version 4.2.3 #> Loading required package: survival data(\"bodyfat\") y = bodyfat$brozek x = robustHD::robStandardize(bodyfat[,-c(1:4)]) x = as.matrix(x)"},{"path":"https://pengsu517.github.io/regcell/articles/demo.html","id":"leave-one-out-cross-validation","dir":"Articles","previous_headings":"The Bodyfat dataset","what":"Leave-one-out Cross-Validation","title":"demo","text":"","code":"library(doParallel) result <- foreach(mtd = 1:length(mtds),                   .packages = c(\"lars\", \"robustHD\", \"robustbase\" , \"mmlasso\",                                 \"shootings\", \"cellWise\", \"regcell\", \"purrr\", \"robcovsel\", \"mfp\"))%:%   foreach(obs = 1:dim(x)[1])%dopar%{      ytrain = y[-obs]     xtrain = as.matrix(x[-obs,])     ytest = y[obs]     xtest = x[obs,]      betahat = mtds[[mtd]](ytrain,xtrain)      res = ytest - betahat[1] - sum(xtest*betahat[-1])     rst = c(mtd = names(mtds)[mtd], n = obs, res = res)      rst   }   save(result, file = \"result_bodyfat.RData\")"},{"path":"https://pengsu517.github.io/regcell/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peng Su. Author, maintainer. Garth Tarr. Author. Samuel Muller. Author. Suojin Wang. Author.","code":""},{"path":"https://pengsu517.github.io/regcell/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Su P, Tarr G, Muller S, Wang S (2023). regcell: Cellwise regularized robust sparse regression. R package version 1.0, https://pengsu517.github.io/regcell/.","code":"@Manual{,   title = {regcell: Cellwise regularized robust sparse regression},   author = {Peng Su and Garth Tarr and Samuel Muller and Suojin Wang},   year = {2023},   note = {R package version 1.0},   url = {https://pengsu517.github.io/regcell/}, }"},{"path":"https://pengsu517.github.io/regcell/index.html","id":"regcell","dir":"","previous_headings":"","what":"Cellwise regularized robust sparse regression","title":"Cellwise regularized robust sparse regression","text":"package provides functions compute CR-Lasso (cellwise regularized Lasso) proposed Peng Su, Samuel Muller, Garth Tarr Suojin Wang. manuscript found soon Arxiv. added demonstration (demo) vignettes. also created online R repository example scripts. https://posit.cloud/content/6047811 get started, can install package using: macOS users, problems gfortran, can try install GNU Fortran compiler page: https://mac.r-project.org/tools/. still errors, extract functions R src folders.","code":"remotes::install_github(\"PengSU517/regcell\", build = FALSE)"},{"path":"https://pengsu517.github.io/regcell/reference/genevar.html","id":null,"dir":"Reference","previous_headings":"","what":"generate simulated datasets — genevar","title":"generate simulated datasets — genevar","text":"generate simulated datasets","code":""},{"path":"https://pengsu517.github.io/regcell/reference/genevar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate simulated datasets — genevar","text":"","code":"genevar(   n = 100,   p = 10,   pr = 5,   e = 0,   r = 0.5,   df = Inf,   beta = NULL,   intercept = 0,   sigma = 1,   mux = rep(0, p),   scalex = 1,   gamma = 6,   outtype = \"mixed\" )"},{"path":"https://pengsu517.github.io/regcell/reference/genevar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate simulated datasets — genevar","text":"n number obs p number predictors pr number active predictors e contamination rate r correlation predictors df degrees freedom predictors beta regression coefficients intercept intercept regression model sigma scale error item mux averages predictors scalex scales predictors gamma magnitudes outliers outtype type outliers: cellwise, rowwise mixed","code":""},{"path":"https://pengsu517.github.io/regcell/reference/genevar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generate simulated datasets — genevar","text":"x: design matrix xc: clean design matrix y: response ynew: another response (independent test set)","code":""},{"path":"https://pengsu517.github.io/regcell/reference/genevar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"generate simulated datasets — genevar","text":"","code":"data = genevar() y = data$y x = data$x"},{"path":"https://pengsu517.github.io/regcell/reference/lassocv.html","id":null,"dir":"Reference","previous_headings":"","what":"Lasso with cross validation — lassocv","title":"Lasso with cross validation — lassocv","text":"Lasso cross validation","code":""},{"path":"https://pengsu517.github.io/regcell/reference/lassocv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lasso with cross validation — lassocv","text":"","code":"lassocv(y, x)"},{"path":"https://pengsu517.github.io/regcell/reference/lassocv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lasso with cross validation — lassocv","text":"y response x design matrix","code":""},{"path":"https://pengsu517.github.io/regcell/reference/lassocv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lasso with cross validation — lassocv","text":"betahat: estimated regression coefficient vector","code":""},{"path":"https://pengsu517.github.io/regcell/reference/lassocv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lasso with cross validation — lassocv","text":"","code":"data = genevar() y = data$y x = data$x fit = lassocv(y,x)"},{"path":"https://pengsu517.github.io/regcell/reference/regcell-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Cellwise regularized robust sparse regression — regcell-package","title":"Cellwise regularized robust sparse regression — regcell-package","text":"Sparse regression cellwise contamination","code":""},{"path":"https://pengsu517.github.io/regcell/reference/regcell-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cellwise regularized robust sparse regression — regcell-package","text":"DESCRIPTION file: package yet installed build time.   Index:  package yet installed build time.  robust sparse regression cellwise contamination","code":""},{"path":"https://pengsu517.github.io/regcell/reference/regcell-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Cellwise regularized robust sparse regression — regcell-package","text":"NA Maintainer: Peng SU <peng.su@sydney.edu.au>","code":""},{"path":"https://pengsu517.github.io/regcell/reference/regcell-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cellwise regularized robust sparse regression — regcell-package","text":"arxiv soon","code":""},{"path":[]},{"path":"https://pengsu517.github.io/regcell/reference/regcell-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cellwise regularized robust sparse regression — regcell-package","text":"","code":"data = genevar() y = data$y x = data$x fit = sregcell_std(y,x)"},{"path":"https://pengsu517.github.io/regcell/reference/Rlars.html","id":null,"dir":"Reference","previous_headings":"","what":"robust Lars — Rlars","title":"robust Lars — Rlars","text":"robust Lars","code":""},{"path":"https://pengsu517.github.io/regcell/reference/Rlars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"robust Lars — Rlars","text":"","code":"Rlars(y, x)"},{"path":"https://pengsu517.github.io/regcell/reference/Rlars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"robust Lars — Rlars","text":"y response x design matrix","code":""},{"path":"https://pengsu517.github.io/regcell/reference/Rlars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"robust Lars — Rlars","text":"betahat: estimated beta sigmahat: estimated scale res: residuals","code":""},{"path":"https://pengsu517.github.io/regcell/reference/Rlars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"robust Lars — Rlars","text":"","code":"data = genevar() y = data$y x = data$x fit = Rlars(y,x)"},{"path":"https://pengsu517.github.io/regcell/reference/sregcell.html","id":null,"dir":"Reference","previous_headings":"","what":"robust sparse regression under cellwise contaminaton (with a grid of lambdas) — sregcell","title":"robust sparse regression under cellwise contaminaton (with a grid of lambdas) — sregcell","text":"robust sparse regression cellwise contaminaton (grid lambdas)","code":""},{"path":"https://pengsu517.github.io/regcell/reference/sregcell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"robust sparse regression under cellwise contaminaton (with a grid of lambdas) — sregcell","text":"","code":"sregcell(   y,   x,   betahat = NULL,   intercept = NULL,   softbeta = TRUE,   softdelta = TRUE,   softzeta = TRUE,   lambda_delta = 2.56,   lambda_zeta = 2.56,   alpha = 0.5,   penal = 1,   penaldelta = 1,   maxiter = 100 )"},{"path":"https://pengsu517.github.io/regcell/reference/sregcell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"robust sparse regression under cellwise contaminaton (with a grid of lambdas) — sregcell","text":"y response x design matrix betahat initial estimate beta intercept initial estimate intercept softbeta whether use soft/hard threshold beta softdelta whether use soft/hard threshold delta(outliers x) softzeta whether use soft/hard threshold zeta(outliers y) lambda_delta tuning parameter delta lambda_zeta tuning parameter zeta alpha importance factor regression loss (0-1, default 0.5) penal penalty parameter model selection (default 1, equivalent BIC ) penaldelta penalty number detected outliers (debug, default 0) maxiter number interations","code":""},{"path":"https://pengsu517.github.io/regcell/reference/sregcell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"robust sparse regression under cellwise contaminaton (with a grid of lambdas) — sregcell","text":"betahat: estimated beta intercept_hat: estiamted intercept betahat_opt: estimated beta post-cellwise-robust regression intercept_opt: estimated intercept post-cellwise-robust regression","code":""},{"path":"https://pengsu517.github.io/regcell/reference/sregcell.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"robust sparse regression under cellwise contaminaton (with a grid of lambdas) — sregcell","text":"","code":"data = genevar() y = data$y x = data$x fit = sregcell(y,x)"},{"path":"https://pengsu517.github.io/regcell/reference/sregcell_lambda.html","id":null,"dir":"Reference","previous_headings":"","what":"Cellwise regularized robust sparse regression (with a specific lambda) — sregcell_lambda","title":"Cellwise regularized robust sparse regression (with a specific lambda) — sregcell_lambda","text":"Cellwise regularized robust sparse regression (specific lambda)","code":""},{"path":"https://pengsu517.github.io/regcell/reference/sregcell_lambda.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cellwise regularized robust sparse regression (with a specific lambda) — sregcell_lambda","text":"","code":"sregcell_lambda(   y,   x,   softbeta = TRUE,   softdelta = TRUE,   softzeta = TRUE,   lambda_delta = 2.56,   lambda_zeta = 2.56,   lambda = 0,   alpha = 0.5,   maxiter = 100 )"},{"path":"https://pengsu517.github.io/regcell/reference/sregcell_lambda.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cellwise regularized robust sparse regression (with a specific lambda) — sregcell_lambda","text":"y response x design matrix softbeta whether use soft/hard threshold beta softdelta whether use soft/hard threshold delta(outliers x) softzeta whether use soft/hard threshold zeta(outliers y) lambda_delta tuning parameter delta lambda_zeta tuning parameter zeta lambda tuning parameter beta alpha importance factor regression loss (0-1, default 0.5) maxiter number interations","code":""},{"path":"https://pengsu517.github.io/regcell/reference/sregcell_lambda.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cellwise regularized robust sparse regression (with a specific lambda) — sregcell_lambda","text":"fit","code":""},{"path":"https://pengsu517.github.io/regcell/reference/sregcell_lambda.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cellwise regularized robust sparse regression (with a specific lambda) — sregcell_lambda","text":"","code":"data = genevar() y = data$y x = data$x fit = sregcell_lambda(y,x, lambda = 1)"},{"path":"https://pengsu517.github.io/regcell/reference/sregcell_std.html","id":null,"dir":"Reference","previous_headings":"","what":"robust sparse regression under cellwise contamination with a grid of lambdas (standardize predictors first) — sregcell_std","title":"robust sparse regression under cellwise contamination with a grid of lambdas (standardize predictors first) — sregcell_std","text":"robust sparse regression cellwise contamination grid lambdas (standardize predictors first)","code":""},{"path":"https://pengsu517.github.io/regcell/reference/sregcell_std.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"robust sparse regression under cellwise contamination with a grid of lambdas (standardize predictors first) — sregcell_std","text":"","code":"sregcell_std(   y,   x,   scale.method = qnscale,   df = Inf,   softbeta = TRUE,   softdelta = TRUE,   softzeta = TRUE,   lambda_delta = NULL,   lambda_zeta = 1,   prob = 0.995,   alpha = 0.5,   penal = 1,   penaldelta = 0,   maxiter = 100 )"},{"path":"https://pengsu517.github.io/regcell/reference/sregcell_std.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"robust sparse regression under cellwise contamination with a grid of lambdas (standardize predictors first) — sregcell_std","text":"y response x design matrix scale.method method used obtain robust scales, default qn df degrees freedom assumed distribution softbeta whether use soft/hard threshold beta softdelta whether use soft/hard threshold delta(outliers x) softzeta whether use soft/hard threshold zeta(outliers y) lambda_delta tuning parameter delta lambda_zeta tuning parameter zeta prob probability quantiles, default 0.995 penal penalty parameter model selection (default 1, equivalent BIC ) penaldelta penalty number detected outliers (debug, default 0) maxiter number interations importance factor regression loss (0-1, default 0.5)","code":""},{"path":"https://pengsu517.github.io/regcell/reference/sregcell_std.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"robust sparse regression under cellwise contamination with a grid of lambdas (standardize predictors first) — sregcell_std","text":"betahat: estimated beta intercept_hat: estiamted intercept betahat_opt: estimated beta post-cellwise-robust regression intercept_opt: estimated intercept post-cellwise-robust regression","code":""},{"path":"https://pengsu517.github.io/regcell/reference/sregcell_std.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"robust sparse regression under cellwise contamination with a grid of lambdas (standardize predictors first) — sregcell_std","text":"","code":"data = genevar() y = data$y x = data$x fit = sregcell_std(y,x)"}]
